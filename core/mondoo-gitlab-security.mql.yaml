# Copyright (c) Mondoo, Inc.
# SPDX-License-Identifier: BUSL-1.1

policies:
  - uid: mondoo-gitlab-security
    name: GitLab Security
    version: 1.4.0
    license: BUSL-1.1
    tags:
      mondoo.com/category: security
      mondoo.com/platform: gitlab,saas
    authors:
      - name: Mondoo, Inc
        email: hello@mondoo.com
    docs:
      desc: "## Overview\n\nThe GitLab Security policy by Mondoo offers guidance on establishing minimum recommended security best practices for GitLab groups and projects.        \n\n## Remote scan\n\nRemote scans of GitLab groups and projects use native transports in cnspec to provide on-demand scan results without the need to install agents or configure integrations.\n\n### Prerequisites\n\nRemote scans of GitLab require a [personal access token](https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html) with access to the group and projects you plan to scan.\n\n### Scan a GitLab group and projects\n\nOpen a terminal and configure an environment variable with your GitLab personal access token:\n\n```bash\nexport GITLAB_TOKEN=<your personal access token>\n```\n\nRun a remote scan of your GitLab group:\n\n```bash\ncnspec scan gitlab --group <group_name>\n```\n\n### Scan a single GitLab project\n\nOpen a terminal and configure an environment variable with your GitLab personal access token:\n\n```bash\nexport GITLAB_TOKEN=<your personal access token>\n```\n\nScan a GitLab group:\n\n```bash\ncnspec scan gitlab --group <group_name> --project <project_name>\n```\n\n## Join the community!\n\nOur goal is to build policies that are simple to deploy, accurate, and actionable.\n\nIf you have any suggestions on how to improve this policy, or if you need support, [join the community](https://github.com/orgs/mondoohq/discussions) in GitHub Discussions.\"\n"
    groups:
      - title: GitLab Group
        filters: asset.platform == "gitlab" || asset.platform == "gitlab-group"
        checks:
          - uid: mondoo-gitlab-security-private-group
          - uid: mondoo-gitlab-security-private-projects
          - uid: mondoo-gitlab-security-require-two-factor
      - title: GitLab Project
        filters: asset.platform == "gitlab-project"
        checks:
          - uid: mondoo-gitlab-security-private-project
queries:
  - uid: mondoo-gitlab-security-private-group
    title: Ensure the group is private
    mql: |
      gitlab.group.visibility != "public"
    docs:
      desc: |
        GitLab allows users with the Owner role to set a group's visibility as:

        - Public
        - Internal
        - Private

        These visibility levels affect who can see the project in the public access directory (/public for your GitLab instance). For example, https://gitlab.com/public. You can control the visibility of individual features with project feature settings.

        Private projects can only be cloned and viewed by project members (except for guests). They appear in the public access directory (`/public``) for project members only.
      audit: |
        __cnspec Shell__

        1. Open a Terminal.
        2. Connect cnspec shell to GitLab `cnspec shell gitlab --token ${GITLAB_TOKEN} --group <group name>`
        3. Run the following query

           ```mql
           gitlab.group.visibility
           ```
      remediation: |
        To make the visibility of a GitLab group private, see [Change group visibility](https://docs.gitlab.com/ee/user/public_access.html#change-group-visibility).
  - uid: mondoo-gitlab-security-require-two-factor
    title: Ensure two-factor authentication is required
    mql: |
      gitlab.group.requireTwoFactorAuthentication == true
    docs:
      desc: |
        Two-factor authentication (2FA) provides an additional layer of security to your users' GitLab accounts. When enabled, users are prompted for a code generated by an application in addition to supplying their username and password to sign in.
      audit: |
        __cnspec Shell__

        1. Open a Terminal.
        2. Connect cnspec shell to GitLab `cnspec shell gitlab --token ${GITLAB_TOKEN} --group <group name>`
        3. Run the following query

           ```mql
           gitlab.group.requireTwoFactorAuthentication
           ```
      remediation: |
        GitLab offers several options to configure 2FA for your users. To enable MFA in your GitLab, see [Enforce two-factor authentication](https://docs.gitlab.com/ee/security/two_factor_authentication.html) on the GitLab documentation site.
  - uid: mondoo-gitlab-security-private-projects
    title: Ensure all projects are private
    mql: gitlab.group.projects { visibility != "public" }
    docs:
      desc: |
        GitLab allows users with the Owner role to set a project's visibility as:

        - Public
        - Internal
        - Private

        These visibility levels affect who can see the project in the public access directory (/public for your GitLab instance). For example, https://gitlab.com/public. You can control the visibility of individual features with project feature settings.

        Private projects can only be cloned and viewed by project members (except for guests). They appear in the public access directory (`/public``) for project members only.
      audit: |
        __cnspec Shell__

        1. Open a Terminal.
        2. Connect cnspec shell to GitLab `cnspec shell gitlab --token ${GITLAB_TOKEN} --group <group name>`
        3. Run the following query

           ```mql
           gitlab.group.projects { visibility != "public" }
           ```
      remediation: |
        To make the visibility of a GitLab project private, see [Change project visibility](https://docs.gitlab.com/ee/user/public_access.html#change-project-visibility).
  - uid: mondoo-gitlab-security-private-project
    title: Ensure the project is private
    mql: gitlab.project { visibility != "public" }
    docs:
      desc: |
        GitLab allows users with the Owner role to set a project's visibility as:

        - Public
        - Internal
        - Private

        These visibility levels affect who can see the project in the public access directory (/public for your GitLab instance). For example, https://gitlab.com/public. You can control the visibility of individual features with project feature settings.

        Private projects can only be cloned and viewed by project members (except for guests). They appear in the public access directory (`/public``) for project members only.
      audit: |
        __cnspec Shell__

        1. Open a Terminal.
        2. Connect cnspec shell to GitLab `cnspec shell gitlab --token ${GITLAB_TOKEN} --group <group name> --project <project name>`
        3. Run the following query

           ```mql
           gitlab.project.visibility
           ```
      remediation: |
        To make the visibility of a GitLab project private, see [Change project visibility](https://docs.gitlab.com/ee/user/public_access.html#change-project-visibility).
