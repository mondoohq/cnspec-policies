# Copyright (c) Mondoo, Inc.
# SPDX-License-Identifier: BUSL-1.1

policies:
  - uid: mondoo-ms365-security
    name: Microsoft 365 Security
    version: 1.1.0
    license: BUSL-1.1
    tags:
      mondoo.com/category: security
      mondoo.com/platform: microsoft365,cloud
    authors:
      - name: Mondoo, Inc
        email: hello@mondoo.com
    docs:
      desc: |-
        ## Overview

        Microsoft 365 Security by Mondoo provides guidance for establishing minimum recommended security and operational best practices for Microsoft 365.

        ## Remote scan

        Remote scans use cnspec providers to retrieve on-demand scan results without having to install any agents.

        For a complete list of providers run:

        ```bash
        cnspec scan --help
        ```

        ### Prerequisites

        Remote scans of Microsoft 365 require API credentials with access to the subscription. Use the following steps to create a new API credential:

        1. Install the [Azure CLI](https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest)
        2. Login to Azure CLI

            ```bash
            az login --allow-no-subscriptions
            ```
        3. Create a new service principal and certificate

            ```bash
            az ad sp create-for-rbac --name "mondoo-ms365" --create-cert
            ```
        4. Record the `appId` and `tenant` values for later use, copy the created certificate file to a safe location
        5. Login to the Azure Active Directory portal at  https://portal.azure.com and navigate to "App Registrations", select the application you just created above
        6. Select "API permissions" from the left menu, select "Add a permission", select "Microsoft Graph", select "Application permissions", add the following permissions:
            - Application.Read.All
            - AuditLog.Read.All
            - Calendars.Read
            - Device.Read.All
            - DeviceManagementApps.Read.All
            - DeviceManagementConfiguration.Read.All
            - DeviceManagementManagedDevices.Read.All
            - DeviceManagementRBAC.Read.All
            - DeviceManagementServiceConfig.Read.All
            - Directory.Read.All
            - Domain.Read.All
            - IdentityProvider.Read.All
            - IdentityRiskEvent.Read.All
            - IdentityRiskyUser.Read.All
            - InformationProtectionPolicy.Read.All
            - MailboxSettings.Read
            - Organization.Read.All
            - OrgContact.Read.All
            - Policy.Read.All
            - Policy.Read.ConditionalAccess
            - Policy.Read.PermissionGrant
            - RoleManagement.Read.All
            - SecurityActions.Read.All
            - SecurityEvents.Read.All
            - TeamsAppInstallation.ReadForUser.All
            - TeamSettings.Read.All
            - ThreatAssessment.Read.All
            - ThreatIndicators.Read.All
          7. Again, select "Add a permission", select "Office 365 Management APIs", select "Application permissions", add the following permissions:
            - ActivityFeed.Read
            - ActivityFeed.ReadDlp
            - ServiceHealth.Read
          8. Finally, select "Grant admin consent for <tenant>" and select "Yes"


        ### Scan a Microsoft 365 subscription

        ```bash
        cnspec scan ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id> --policy-bundle <*.mql.yaml>
        ```

        ## Join the community!

        Our goal is to build policies that are simple to deploy, accurate, and actionable.

        If you have any suggestions for how to improve this policy, or if you need support, [join the community](https://github.com/orgs/mondoohq/discussions) in GitHub Discussions.
    groups:
      - title: Microsoft365
        filters: |
          asset.platform == "microsoft365"
          asset.kind == "api"
        checks:
          - uid: mondoo-m365-security-enable-azure-ad-identity-protection-sign-in-risk-policies
          - uid: mondoo-m365-security-enable-azure-ad-identity-protection-user-risk-policies
          - uid: mondoo-m365-security-enable-conditional-access-policies-to-block-legacy-authentication
          - uid: mondoo-m365-security-ensure-multifactor-authentication-is-enabled-for-all-users-in-administrative-roles
          - uid: mondoo-m365-security-ensure-multifactor-authentication-is-enabled-for-all-users-in-all-roles
          - uid: mondoo-m365-security-ensure-security-defaults-is-disabled-on-azure-active-directory
          - uid: mondoo-m365-security-ensure-that-between-two-and-four-global-admins-are-designated
          - uid: mondoo-m365-security-ensure-that-mobile-device-encryption-is-enabled-to-prevent-unauthorized-access-to-mobile-data
          - uid: mondoo-m365-security-ensure-that-mobile-devices-require-a-minimum-password-length-to-prevent-brute-force-attacks
          - uid: mondoo-m365-security-ensure-that-office-365-passwords-are-not-set-to-expire
          - uid: mondoo-m365-security-ensure-that-spf-records-are-published-for-all-exchange-domains
          - uid: mondoo-m365-security-ensure-third-party-integrated-applications-are-not-allowed
    scoring_system: 2
queries:
  - uid: mondoo-m365-security-ensure-multifactor-authentication-is-enabled-for-all-users-in-all-roles
    title: Ensure that multi-factor authentication has been enabled for all users
    impact: 100
    mql: |
      microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'MFARegistrationV2' &&  _['score'] == 9)
    docs:
      desc: |
        This check ensures that the MFA has been enabled for all users in the Microsoft 365 tenant.
      audit: |
        __cnspec run__

        To audit Microsoft 365 with `cnspec run`:

        Run this query:

          ```mql
          cnspec run ms365 -c "microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'MFARegistrationV2' &&  _['score'] == 9)" --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        __cnspec shell__

        To audit Microsoft 365 with `cnspec shell`:

        1. Launch `cnspec shell`:

          ```bash
          cnspec shell ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        2. Run this query:

          ```mql
          microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'MFARegistrationV2' &&  _['score'] == 9 )
          ```
      remediation: |
        ### Microsoft 365 Console

        To update via the Microsoft 365 portal:
        1. Log in as Global Administrator to the Microsoft 365 portal at https://admin.microsoft.com
        2. Select "Azure Active Directory" once in the "Admin Centers"
        3. Applications --> Enterprise applications --> Security --> Conditional Access
        4. Make sure there is a Policy with following conditions:
           * Grant --> Grant access (Require multi-factor authentication)
           * Users --> All users
           * Cloud apps or actions --> All cloud apps
        5. Make sure that the policy is Enabled
  - uid: mondoo-m365-security-ensure-that-office-365-passwords-are-not-set-to-expire
    title: Ensure that Office 365 passwords never Expire
    impact: 80
    mql: |
      microsoft.domains {
        passwordValidityPeriodInDays == 2147483647
      }
    docs:
      desc: |
        This check ensures to make sure the Office 365 passwords never expires. Based on the new research from several Organizations, it has been confirmed that forcing users to change their password, make the password less secure!
      audit: |
        __cnspec run__

        To audit Microsoft 365 with `cnspec run`:

        Run this query:

          ```mql
          cnspec run ms365 -c "microsoft.domains { passwordValidityPeriodInDays == 2147483647 }" --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        __cnspec shell__

        To audit Microsoft 365 with `cnspec shell`:

        1. Launch `cnspec shell`:

          ```bash
          cnspec shell ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        2. Run this query:

          ```mql
          microsoft.domains { passwordValidityPeriodInDays == 2147483647 }
          ```
      remediation: |
        ### Microsoft 365 Console

         To update via the Microsoft 365 portal:
         1. Log in as Global Administrator to the Microsoft 365 portal at https://admin.microsoft.com
         2. Settings --> Org Settings --> Security & Privacy --> Password expiration policy -->  Set passwords to never expire (recommended)
         3. Select Save
  - uid: mondoo-m365-security-ensure-multifactor-authentication-is-enabled-for-all-users-in-administrative-roles
    title: Ensure all users in administrative roles have MFA enabled
    impact: 100
    mql: |
      microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'AdminMFAV2' && _['score'] == 10 )
    docs:
      desc: |
        Enable multi-factor authentication for all users in administrative roles!
      audit: |
        __cnspec run__

         To audit Microsoft 365 with `cnspec run`:

         Run this query:

           ```mql
           cnspec run ms365 -c "microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'AdminMFAV2' && _['score'] == 10)" --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
           ```

         __cnspec shell__

         To audit Microsoft 365 with `cnspec shell`:

         1. Launch `cnspec shell`:

           ```bash
           cnspec shell ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
           ```

         2. Run this query:

           ```mql
           microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'AdminMFAV2' && _['score'] == 10 )
           ```
      remediation: |
        ### Microsoft 365 Console

        To update via the Microsoft 365 portal:
        1. Log in as Global Administrator to the Microsoft 365 portal at https://admin.microsoft.com
        2. Select "Azure Active Directory" once in the "Admin Centers"
        3. Applications --> Enterprise applications --> Security --> Conditional Access
        4. Make sure there is a Policy with following conditions:
          * Grant --> Grant access (Require multi-factor authentication)
          * Users --> Users and groups --> Include --> Select users and groups --> Directory roles --> at minimum select following rules (Billing admin, Conditional Access admin, Exchange admin, Global admin, Helpdesk admin, Security admin, SharePoint admin, and User admin)
          * Cloud apps or actions --> All cloud apps
        5. Make sure that the policy is Enabled
  - uid: mondoo-m365-security-ensure-that-between-two-and-four-global-admins-are-designated
    title: Ensure that at least three global admins are designated and not more than four
    impact: 60
    mql: |
      microsoft.rolemanagement.roleDefinitions.where(displayName == "Global Administrator").all(assignments.length > 1 && assignments.length <= 4)
    docs:
      desc: |
        This check ensures that there are enough Global Admins in a single tenant.
        When it comes to designating global admins, it's important to consider the size and complexity of the organization, as well as the level of responsibility and authority required for the role. As a general rule, it's a good idea to have at least three global admins to ensure that there is redundancy and coverage in case one admin is unavailable or leaves the organization.

        At the same time, having too many global admins can lead to confusion and inefficiency, as multiple people may be making decisions or taking actions without proper coordination. Therefore, it's recommended to keep the number of global admins to no more than four, unless the organization is particularly large or complex and requires more administrators to properly manage its operations.
      audit: |
        __cnspec run__

        To audit Microsoft 365 with `cnspec run`:

        Run this query:

          ```mql
          cnspec run ms365 -c "microsoft.rolemanagement.roleDefinitions.where(displayName == "Global Administrator").all(assignments.length > 1 && assignments.length <= 4)" --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```
        __cnspec shell__

        To audit Microsoft 365 with `cnspec shell`:

        1. Launch `cnspec shell`:

          ```bash
          cnspec shell ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        2. Run this query:

          ```mql
          microsoft.rolemanagement.roleDefinitions.where(displayName == "Global Administrator").all(assignments.length > 1 && assignments.length <= 4)
          ```
      remediation: |
        ### Microsoft 365 Console

         To update via the Microsoft 365 portal:
         1. Log in as Global Administrator to the Microsoft 365 portal at https://admin.microsoft.com
         2. Select "Azure Active Directory" once in the "Admin Centers"
         3. Users --> Active Users
         4. Create a new Global Admin, if there are not enough by:
            * Select the User's name
            * Manage roles --> Admin center access -> Global Administrator -> Save changes
         5. Remove the Global Admin, if there are more than four Global Administrators
            * Select the User
            * Roles --> Manage roles --> De-Select the appropriate role -> Save changes
  - uid: mondoo-m365-security-enable-conditional-access-policies-to-block-legacy-authentication
    title: Ensure that the legacy authentication has been disabled by Conditional access policies
    impact: 80
    mql: |
      microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'BlockLegacyAuthentication' && _['score'] == 8)
    docs:
      desc: |
        This check ensures that the legacy authentication protocols has been disabled in office 365.

        To give your users easy access to your cloud apps, Azure Active Directory (Azure AD) supports a broad variety of authentication protocols including legacy authentication. However, legacy authentication doesn't support things like multi-factor authentication (MFA). MFA is a common requirement to improve security posture in organizations.
      audit: |
        __cnspec run__

        To audit Microsoft 365 with `cnspec run`:

        Run this query:

          ```mql
          cnspec run ms365 -c "microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'BlockLegacyAuthentication' && _['score'] == 8)" --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```
        __cnspec shell__

        To audit Microsoft 365 with `cnspec shell`:

        1. Launch `cnspec shell`:

          ```bash
          cnspec shell ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        2. Run this query:

          ```mql
          microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'BlockLegacyAuthentication' && _['score'] == 8)
          ```
      remediation: |
        ### Microsoft 365 Console

        To update via the Microsoft 365 portal:
        1. Log in as Global Administrator to the Microsoft 365 portal at https://admin.microsoft.com
        2. Select "Azure Active Directory" once in the "Admin Centers"
        3. Applications --> Enterprise applications --> Security --> Conditional Access
        4. Make sure there is a Policy with following conditions:
          * Grant --> Block access
          * Users --> Users and groups --> Include --> All users
          * Users --> Users and groups --> Exclude to be at least one low risk account or directory role. (best practice)
          * Cloud apps or actions --> All cloud apps
          * Conditions --> Client apps --> enable the settings for `Exchange ActiveSync clients` and `other clients`
        5. Make sure that the policy is Enabled
  - uid: mondoo-m365-security-ensure-security-defaults-is-disabled-on-azure-active-directory
    title: Ensure that the security Defaults is disabled
    impact: 80
    mql: |
      microsoft.policies.identitySecurityDefaultsEnforcementPolicy["isEnabled"] == false
    docs:
      desc: |
        This check ensures that the security defaults (which are enabled by default) are enabled in Azure Active Directory.

        Note: Using security defaults prohibits custom settings. Many best security practices require custom settings, such as requiring MFA for all users and admins.
      audit: |
        __cnspec run__

        To audit Microsoft 365 with `cnspec run`:

        Run this query:

          ```mql
          cnspec run ms365 -c "microsoft.policies.identitySecurityDefaultsEnforcementPolicy["isEnabled"] == false" --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```
        __cnspec shell__

        To audit Microsoft 365 with `cnspec shell`:

        1. Launch `cnspec shell`:

          ```bash
          cnspec shell ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        2. Run this query:

          ```mql
          microsoft.policies.identitySecurityDefaultsEnforcementPolicy["isEnabled"] == false
          ```
      remediation: |
        ### Microsoft 365 Console

         To update via the Microsoft 365 portal:
         1. Log in as Global Administrator, security administrator or Conditional Access administrator to the Microsoft 365 portal at https://admin.microsoft.com
         2. Select "Azure Active Directory" once in the "Admin Centers"
         3. Overview --> properties --> Manage Security default -> Verify the Enabled security default toggle to no
         4. Save
  - uid: mondoo-m365-security-ensure-that-spf-records-are-published-for-all-exchange-domains
    title: Ensure Sender Policy Record (SPF) exists for each domain in Exchange
    impact: 60
    mql: |
      microsoft.domains {
        serviceConfigurationRecords.one(recordType.downcase == "txt" && properties['text'] == "v=spf1 include:spf.protection.outlook.com -all")
      }
    docs:
      desc: |
        This check ensures that SPF records is created for each domain in Exchange.
      audit: |
        __cnspec run__

        To audit Microsoft 365 with `cnspec run`:

        Run this query:

          ```mql
          cnspec run ms365 -c "microsoft.domains { serviceConfigurationRecords.one(recordType.downcase == "txt" && properties['text'] == "v=spf1 include:spf.protection.outlook.com -all") }" --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```
        __cnspec shell__

        To audit Microsoft 365 with `cnspec shell`:

        1. Launch `cnspec shell`:

          ```bash
          cnspec shell ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        2. Run this query:

          ```mql
          microsoft.domains { serviceConfigurationRecords.one(recordType.downcase == "txt" && properties['text'] == "v=spf1 include:spf.protection.outlook.com -all") }
          ```
      remediation: |
        If Exchange Online is the main platform for sending and receiving the email in your domain, add the following txt record for each accepted domains:
          v=spf1 include:spf.protection.outlook.com -all
  - uid: mondoo-m365-security-ensure-that-mobile-devices-require-a-minimum-password-length-to-prevent-brute-force-attacks
    title: Ensure that minimum password length has been set in order to prevent any brute force attack
    impact: 80
    mql: |
      microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.windows10GeneralConfiguration") {
        properties['passwordMinimumLength'] == 8
      }
      microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.macOSGeneralDeviceConfiguration") {
        properties['passwordMinimumLength'] == 8
      }
      microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.iosGeneralDeviceConfiguration") {
        properties['passcodeMinimumLength'] == 8
      }
      microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.androidGeneralDeviceConfiguration") {
        properties['passwordMinimumLength'] == 8
      }
      microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.androidWorkProfileGeneralDeviceConfiguration") {
        properties['passwordMinimumLength'] == 8
      }
    docs:
      desc: |
        This check ensures that there is minimum password length - at least eight characters - for mobile devices

        According to NIST (SP 800-63-2), permitted the use of randomly generated PINs with 6 or more digits while requiring user-chosen memorized secrets to be a minimum of 8 characters long.
      audit: |
        __cnspec run__

        To audit Microsoft 365 with `cnspec run`:

        Run this query:

          ```mql
          cnspec run ms365 -c " microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.windows10GeneralConfiguration") {
        properties['passwordMinimumLength'] == 8 } microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.macOSGeneralDeviceConfiguration") {
        properties['passwordMinimumLength'] == 8 } microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.iosGeneralDeviceConfiguration") {
        properties['passcodeMinimumLength'] == 8 } microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.androidGeneralDeviceConfiguration") {
        properties['passwordMinimumLength'] == 8 } microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.androidWorkProfileGeneralDeviceConfiguration") {
        properties['passwordMinimumLength'] == 8 }") }" --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```
        __cnspec shell__

        To audit Microsoft 365 with `cnspec shell`:

        1. Launch `cnspec shell`:

          ```bash
          cnspec shell ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        2. Run this query:

          ```mql
                microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.windows10GeneralConfiguration") {
        properties['passwordMinimumLength'] == 8 } microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.macOSGeneralDeviceConfiguration") {
        properties['passwordMinimumLength'] == 8 } microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.iosGeneralDeviceConfiguration") {
        properties['passcodeMinimumLength'] == 8 } microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.androidGeneralDeviceConfiguration") {
        properties['passwordMinimumLength'] == 8 } microsoft.devicemanagement.deviceConfigurations.where( properties["@odata.type"] == "#microsoft.graph.androidWorkProfileGeneralDeviceConfiguration") {
        properties['passwordMinimumLength'] == 8 }
          ```
      remediation: |
        ### Microsoft 365 Console

         To update via the Microsoft 365 portal:

         1. Log in as to the Microsoft 365 portal at https://admin.microsoft.com
         2. Endpoint Manager --> Devices --> Policy --> Configuration profiles
         3. Ensure that a profile exists for each Platform with following conditions:
            * Password section --> Device restrictions --> Minimum password length is set to 8
  - uid: mondoo-m365-security-ensure-that-mobile-device-encryption-is-enabled-to-prevent-unauthorized-access-to-mobile-data
    title: Ensure that Android mobile device encryption is enabled
    impact: 80
    mql: |
      microsoft.devicemanagement.deviceConfigurations.where( properties['@odata.type'] == "#microsoft.graph.androidGeneralDeviceConfiguration") {
        properties['storageRequireDeviceEncryption'] == true
      }
    docs:
      desc: |
        This check ensures that encryption in android mobile devices has been enabled to prevent any unauthorized access to the data
      audit: |
        __cnspec run__

        To audit Microsoft 365 with `cnspec run`:

        Run this query:

          ```mql
          cnspec run ms365 -c "microsoft.devicemanagement.deviceConfigurations.where( properties['@odata.type'] == "#microsoft.graph.androidGeneralDeviceConfiguration") { properties['storageRequireDeviceEncryption'] == true }" --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```
        __cnspec shell__

        To audit Microsoft 365 with `cnspec shell`:

        1. Launch `cnspec shell`:

          ```bash
          cnspec shell ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        2. Run this query:

          ```mql
          microsoft.devicemanagement.deviceConfigurations.where( properties['@odata.type'] == "#microsoft.graph.androidGeneralDeviceConfiguration") { properties['storageRequireDeviceEncryption'] == true }
          ```
      remediation: |
        ### Microsoft 365 Console

         To update via the Microsoft 365 portal:
         1. Log in to the Microsoft 365 portal at https://admin.microsoft.com
         2. Endpoint Manager --> Devices --> Policy --> Configuration profiles
         3. Ensure that a profile exists for Android with following conditions:
            * Password section --> Device restrictions --> Encryption is set to require
  - uid: mondoo-m365-security-ensure-third-party-integrated-applications-are-not-allowed
    title: Ensure that no third party integrated applications are allowed
    impact: 80
    mql: |
      microsoft.policies.authorizationPolicy {
        _['defaultUserRolePermissions']['allowedToCreateApps'] == false
      }
    docs:
      desc: |
        This check ensures that no third party integrated applications can connect to your services.
      audit: |
        __cnspec run__

        To audit Microsoft 365 with `cnspec run`:

        Run this query:

          ```mql
          cnspec run ms365 -c "microsoft.policies.authorizationPolicy { _['defaultUserRolePermissions']['allowedToCreateApps'] == false }" --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```
        __cnspec shell__

        To audit Microsoft 365 with `cnspec shell`:

        1. Launch `cnspec shell`:

          ```bash
          cnspec shell ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        2. Run this query:

          ```mql
          microsoft.policies.authorizationPolicy { _['defaultUserRolePermissions']['allowedToCreateApps'] == false }
          ```
      remediation: |
        ### Microsoft 365 Console

        To update via the Microsoft 365 portal:
        1. Log in as Global Administrator to the Microsoft 365 portal at https://admin.microsoft.com
        2. Select "Azure Active Directory" once in the "Admin Centers"
        3. Users --> User settings -->  App registrations set to NO
        4. Save
  - uid: mondoo-m365-security-enable-azure-ad-identity-protection-sign-in-risk-policies
    title: Enable Azure AD Identity Protection sign-in
    impact: 80
    mql: |
      microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'SigninRiskPolicy' && _['score'] == 7 )
    docs:
      desc: |
        This check ensures that there are some policies in place which can detect risky sign-in in real-time and offline. A risky sign-in mainly means a sign-in attempt which might be performed by illegitimate owner of a user account.
      audit: |
        __cnspec run__

        To audit Microsoft 365 with `cnspec run`:

        Run this query:

          ```mql
          cnspec run ms365 -c "microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'SigninRiskPolicy' && _['score'] == 7 )" --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```
        __cnspec shell__

        To audit Microsoft 365 with `cnspec shell`:

        1. Launch `cnspec shell`:

          ```bash
          cnspec shell ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        2. Run this query:

          ```mql
          microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'SigninRiskPolicy' && _['score'] == 7 )
          ```
      remediation: |
        ### Microsoft 365 Console

        To config sign-in risk policy via the Microsoft 365 portal:
        1. Log in as Global Administrator to the Microsoft 365 portal at https://admin.microsoft.com
        2. Select "Azure Active Directory" once in the "Admin Centers"
        3. Applications --> Enterprise applications --> Security --> Conditional Access
        4. Make sure there is a Policy with following conditions:
          * Grant --> Grant access --> Require multi-factor authentication --> then Select
          * Users --> Users and groups --> Include --> All users
          * Cloud apps or actions --> All cloud apps
          * Conditions --> sign-in risk --> Yes in the right pane followed by the appropriate level.
        5. Make sure that the policy is Enabled
  - uid: mondoo-m365-security-enable-azure-ad-identity-protection-user-risk-policies
    title: Enable Azure AD Identity Protection sign-in
    impact: 100
    mql: |
      microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'UserRiskPolicy' && _['score'] == 7 )
    docs:
      desc: |
        This check ensures that there are some policies in place which can detect risky sign-in in real-time and offline. A risky sign-in mainly means a sign-in attempt which might be performed by illegitimate owner of a user account.
      audit: |
        __cnspec run__

        To audit Microsoft 365 with `cnspec run`:

        Run this query:

          ```mql
          cnspec run ms365 -c "microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'UserRiskPolicy' && _['score'] == 7 )" --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```
        __cnspec shell__

        To audit Microsoft 365 with `cnspec shell`:

        1. Launch `cnspec shell`:

          ```bash
          cnspec shell ms365 --certificate-path <*.pem> --tenant-id <tenant_id> --client-id <client_id>
          ```

        2. Run this query:

          ```mql
          microsoft.security.latestSecureScores.controlScores.one( _['controlName'] == 'UserRiskPolicy' && _['score'] == 7 )
          ```
      remediation: |
        ### Microsoft 365 Console

        To config sign-in risk policy via the Microsoft 365 portal:
        1. Log in as Global Administrator to the Microsoft 365 portal at https://admin.microsoft.com
        2. Select "Azure Active Directory" once in the "Admin Centers"
        3. Applications --> Enterprise applications --> Security --> Conditional Access
        4. Make sure there is a Policy with following conditions:
          * Grant --> Grant access --> Require multi-factor authentication --> then Select
          * Users --> Users and groups --> Include --> All users
          * Cloud apps or actions --> All cloud apps
          * Conditions --> sign-in risk --> Yes in the right pane followed by the appropriate level.
        5. Make sure that the policy is Enabled
