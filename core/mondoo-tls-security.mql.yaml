owner_mrn: //policy.api.mondoo.app
policies:
  - uid: mondoo-tls-security
    name: Mondoo TLS/SSL Security Baseline
    version: 1.1.0
    is_public: true
    authors:
      - name: Mondoo, Inc
        email: hello@mondoo.com
    docs:
      desc: |
        The Transport Layer Security (TLS) protocol is the primary means of protecting network communications. 

        The Mondoo TLS/SSL Security Baseline includes controls for ensuring the security and configuration of TLS/SSL connections and certificates.

        If you have questions, comments, or have identified ways to improve this policy, please write us at hello@mondoo.com, or reach out in [GitHub Discussions](https://github.com/orgs/mondoohq/discussions).
    tags:
      tls:
      ssl:
    specs:
      - title: Secure TLS/SSL connection
        asset_filter:
          query: platform.family.contains('network')
        scoring_queries:
          mondoo-tls-security-no-weak-tls-versions: null
          mondoo-tls-security-no-rc4-ciphers: null
          mondoo-tls-security-no-null-cipher-suites: null
          mondoo-tls-security-no-export-cipher-suites: null
          mondoo-tls-security-no-diffie-hellman-cipher-suites: null
          mondoo-tls-security-no-weak-block-ciphers: null
          mondoo-tls-security-no-weak-block-cipher-modes: null
          mondoo-tls-security-no-rsa-key-exchange: null
          mondoo-tls-security-no-old-cipher-suites: null
          mondoo-tls-security-ciphers-include-aead-ciphers: null
          mondoo-tls-security-ciphers-include-pfs: null
          mondoo-tls-security-mitigate-beast: null
      - title: Valid TLS/SSL certificate
        asset_filter:
          query: platform.family.contains('network')
        scoring_queries:
          mondoo-tls-security-cert-domain-name-match: null
          mondoo-tls-security-cert-is-valid: null
          mondoo-tls-security-cert-no-cert-expired: null
          mondoo-tls-security-cert-not-self-signed: null
          mondoo-tls-security-cert-not-revoked: null
          mondoo-tls-security-cert-no-weak-signature: null

queries:
  - uid: mondoo-tls-security-cert-domain-name-match
    title: The certificate's domain name must match
    query: |
      tls.certificates.first.subject.commonName == platform.fqdn
  - uid: mondoo-tls-security-cert-is-valid
    title: The certificate is valid
    query: |
      tls.certificates.first {
        notBefore < time.now
        notAfter - notBefore < 398*time.day
      }
  - uid: mondoo-tls-security-cert-no-cert-expired
    title: None of the certificates have expired
    query: |
      tls.certificates.all( expiresIn > 0*time.day )
  - uid: mondoo-tls-security-cert-not-self-signed
    title: Do not use a self-signed certificate
    query: |
      tls.certificates.last.isCA
  - uid: mondoo-tls-security-cert-not-revoked
    title: Do not use revoked certificates
    query: |
      # @msg Found ${length} certificates in this chain that have been revoked:
      # ${{ 
      #   subject.commonName
      #   issuer.commonName
      #   ocspServer
      # }}
      tls.certificates.none( isRevoked )
  - uid: mondoo-tls-security-cert-no-weak-signature
    title: Do not use weak certificate signatures
    query: |
      # @msg Found ${length} certificates in this chain that use weak signatures:
      # ${{ 
      #   subject.commonName
      #   issuer.commonName
      #   signingAlgorithm
      # }}
      tls.certificates.none(
        signingAlgorithm == /md2|md5|sha1/i
      )
  - uid: mondoo-tls-security-no-weak-tls-versions
    title: Avoid weak SSL and TLS versions
    query: |
      tls.versions.containsOnly(["tls1.2", "tls1.3"])
  - uid: mondoo-tls-security-no-rc4-ciphers
    title: Avoid RC4 ciphers
    query: |
      tls.ciphers.none( /rc4/i )
  - uid: mondoo-tls-security-no-null-cipher-suites
    title: Avoid NULL cipher suites
    query: |
      tls.ciphers.none( /null/i )
  - uid: mondoo-tls-security-no-export-cipher-suites
    title: Avoid export ciphers suites
    query: |
      tls.ciphers.none( /export/i )
  - uid: mondoo-tls-security-no-diffie-hellman-cipher-suites
    title: Avoid anonymous Diffie-Hellman suites
    query: |
      tls.ciphers.none( /dh_anon/i )
  - uid: mondoo-tls-security-no-weak-block-ciphers
    title: Avoid weak block ciphers
    query:
      tls.ciphers.none( /des|rc2|idea/i )
  - uid: mondoo-tls-security-no-weak-block-cipher-modes
    title: Avoid weak block cipher modes
    query: 
      tls.ciphers.none( /cbc/i )
  - uid: mondoo-tls-security-no-rsa-key-exchange
    title: Avoid cipher suites with RSA key exchange
    query:
      tls.ciphers.none( /^tls_rsa/i )
  - uid: mondoo-tls-security-no-old-cipher-suites
    title: Avoid old cipher suites
    query:
      tls.ciphers.none( /^old/i )
  - uid: mondoo-tls-security-ciphers-include-aead-ciphers
    title: Preferred ciphers must include AEAD ciphers
    query:
      tls.ciphers.any( /chacha20_poly1305|gcm|ccm/i )
  - uid: mondoo-tls-security-ciphers-include-pfs
    title: Preferred ciphers must include perfect forward secrecy (PFS)
    query:
      tls.ciphers.any( /ecdhe_(rsa|ecdsa)|dhe_(rsa|dss)|cecpq/i )
  - uid: mondoo-tls-security-mitigate-beast
    title: Mitigate BEAST attacks on the server-side
    refs:
      - title: VMware mitigation of CVE-2011-3389 (BEAST) for web server administrators
        url: https://kb.vmware.com/s/article/2008784
    query: |
      switch {
      case tls.versions.containsOnly(["tls1.2", "tls1.3"]):
        score(100);
      case tls.ciphers.all( /rc4/i ):
        score(100);
      case tls.ciphers.none( /null|dh_anon|export|des|rc2|idea/ ):
        score(80);
      default:
        score(0);
      }